// Nigdy nie robic scripted jenkins file
properties([
    parameters([
        string(defaultValue: 'main', description: '', name: 'source_branch', trim: true),
        booleanParam(defaultValue: false, description: '', name: 'send_email')
    ]),
    disableConcurrentBuilds(),
    disableResume()
])

timeout(time: 3, unit: "MINUTES") {
    node {
        String mavenPath;

        stage("Checkout") {
            // Print parameters
            echo("PARAM source_branch: '${params.source_branch}'")
            echo("PARAM send_email: '${params.send_email}'")

            sh("ls -la") // Debug
            currentBuild.description = params.source_branch
            checkout(
                scm: scmGit(
                    branches: [[name: "refs/heads/${params.source_branch}"]],
                    extensions: [cleanBeforeCheckout(deleteUntrackedNestedRepositories: true)],
                    userRemoteConfigs: [
                        [credentialsId: 'github-write', url: 'https://github.com/DomnMihai/web-server.git']
                    ]
                ),
                changelog: true,
                poll: false,
            )
            sh("ls -la") // Debug
        }

        stage("Maven install") {
            mavenPath = tool(name: 'maven-3.9.9', type: 'maven') + "/bin"
            sh("${mavenPath}/mvn install -DskipTests")
        }
        stage("Maven test") {
            catchError(buildResult: 'FAILURE', message: 'Maven test fail', stageResult: 'FAILURE') {
                sh("${mavenPath}/mvn test")
            }

            junit(stdioRetention: '', testResults: 'target/surefire-reports/TEST-jenkins.workshops.*.xml')
        }

        if (params.send_email) {
            stage('Send email') {
                final String pipelineStatus = currentBuild.result;

                if (pipelineStatus != null && !pipelineStatus.equals("SUCCESS")) {
                    final String recipients = "EMAIL";
                    final String subject = "web-server tests failed ${env.BUILD_NUMBER}. Pipeline status ${pipelineStatus}";
                    final String body = """Dear user<br>
<br>
Jenkins <b>web-server</b> test pipeline failed ${env.BUILD_URL}<br>
<br>
Do not reply
""";
                    emailext(to: recipients, subject: subject, body: body);
                } else {
                    echo("Skipping email sending");
                }
            }
        }

        stage("Clean workspace") {
            cleanWs()
        }
    }
}
